# The provider network interface
auto ens33
iface ens33 inet manual
up ip link set dev $IFACE up
down ip link set dev $IFACE down

# controller
192.168.58.140       controller

# compute1
192.168.58.141       compute

allow 192.168.58.0/24

[mysqld]
bind-address = 192.168.58.140

default-storage-engine = innodb
innodb_file_per_table = on
max_connections = 4096
collation-server = utf8_general_ci
character-set-server = utf8

rabbitmqctl add_user openstack mima

-l 192.168.58.140

ETCD_NAME="controller"
ETCD_DATA_DIR="/var/lib/etcd"
ETCD_INITIAL_CLUSTER_STATE="new"
ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster-01"
ETCD_INITIAL_CLUSTER="controller=http://192.168.58.140:2380"
ETCD_INITIAL_ADVERTISE_PEER_URLS="http://192.168.58.140:2380"
ETCD_ADVERTISE_CLIENT_URLS="http://192.168.58.140:2379"
ETCD_LISTEN_PEER_URLS="http://0.0.0.0:2380"
ETCD_LISTEN_CLIENT_URLS="http://192.168.58.140:2379"

GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' \
IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' \
IDENTIFIED BY 'mima';

connection = mysql+pymysql://keystone:mima@controller/keystone

keystone-manage bootstrap --bootstrap-password mima \
--bootstrap-admin-url http://controller:5000/v3/ \
--bootstrap-internal-url http://controller:5000/v3/ \
--bootstrap-public-url http://controller:5000/v3/ \
--bootstrap-region-id RegionOne

export OS_USERNAME=admin
export OS_PASSWORD=mima
export OS_PROJECT_NAME=admin
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_DOMAIN_NAME=Default
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3

openstack --os-auth-url http://controller:5000/v3 \
  --os-project-domain-name Default --os-user-domain-name Default \
  --os-project-name admin --os-username admin token issue
  
openstack --os-auth-url http://controller:5000/v3 \
  --os-project-domain-name Default --os-user-domain-name Default \
  --os-project-name myproject --os-username myuser token issue
  
vim admin-openrc

export OS_PROJECT_DOMAIN_NAME=Default
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=mima
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2

vim demo-openrc

export OS_PROJECT_DOMAIN_NAME=Default
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_NAME=myproject
export OS_USERNAME=myuser
export OS_PASSWORD=mima
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2

------------------------------------------------

GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' \
  IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' \
  IDENTIFIED BY 'mima';

vim /etc/glance/glance-api.conf 

[database]
# ...
connection = mysql+pymysql://glance:mima@controller/glance

[keystone_authtoken]
#Comment out or remove any other options in the [keystone_authtoken] section.
www_authenticate_uri = http://controller:5000
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = glance
password = mima

[paste_deploy]
# ...
flavor = keystone

[glance_store]
# ...
stores = file,http
default_store = file
filesystem_store_datadir = /var/lib/glance/images/

vim /etc/glance/glance-registry.conf

[database]
# ...
connection = mysql+pymysql://glance:mima@controller/glance

[keystone_authtoken]
#Comment out or remove any other options in the [keystone_authtoken] section.
www_authenticate_uri = http://controller:5000
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = glance
password = mima

[paste_deploy]
# ...
flavor = keystone

-------------------------------
nova installation for Rocky

Install and configure controller node for Ubuntu

GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' \
  IDENTIFIED BY 'mima';

GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' \
  IDENTIFIED BY 'mima';

GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'%' \
  IDENTIFIED BY 'mima';

GRANT ALL PRIVILEGES ON placement.* TO 'placement'@'localhost' \
  IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON placement.* TO 'placement'@'%' \
  IDENTIFIED BY 'mima';
  
  
apt install nova-api nova-conductor nova-consoleauth \
  nova-novncproxy nova-scheduler nova-placement-api

vim /etc/nova/nova.conf

[api_database]
# ...
connection = mysql+pymysql://nova:mima@controller/nova_api

[database]
# ...
connection = mysql+pymysql://nova:mima@controller/nova

[placement_database]
# ...
connection = mysql+pymysql://placement:mima@controller/placement

[DEFAULT]
#Due to a packaging bug, remove the log_dir option from the [DEFAULT] section.
transport_url = rabbit://openstack:mima@controller
my_ip = 192.168.58.140
use_neutron = true
firewall_driver = nova.virt.firewall.NoopFirewallDriver

[api]
# ...
auth_strategy = keystone

[keystone_authtoken]
# ...
auth_url = http://controller:5000/v3
memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = nova
password = mima

[vnc]
enabled = true
# ...
server_listen = $my_ip
server_proxyclient_address = $my_ip

[glance]
# ...
api_servers = http://controller:9292

[oslo_concurrency]
# ...
lock_path = /var/lib/nova/tmp

[placement]
# ...
region_name = RegionOne
project_domain_name = Default
project_name = service
auth_type = password
user_domain_name = Default
auth_url = http://controller:5000/v3
username = placement
password = mima


Install and configure a compute node for Ubuntu

apt install nova-compute

vim /etc/nova/nova.conf

[DEFAULT]
# ...
transport_url = rabbit://openstack:mima@controller
my_ip = 192.168.58.141
use_neutron = true
firewall_driver = nova.virt.firewall.NoopFirewallDriver

[api]
# ...
auth_strategy = keystone

[keystone_authtoken]
# ...
auth_url = http://controller:5000/v3
memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = nova
password = mima

[placement]
# ...
region_name = RegionOne
project_domain_name = Default
project_name = service
auth_type = password
user_domain_name = Default
auth_url = http://controller:5000/v3
username = placement
password = mima

---------------------------------------------------------------------------------------------------------------------------------
neutron installation for Rocky
Install and configure controller node

GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' \
  IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' \
  IDENTIFIED BY 'mima';
  
Networking Option 2: Self-service networks

vim /etc/neutron/neutron.conf

[database]
#Comment out or remove any other connection options in the [database] section.
connection = mysql+pymysql://neutron:mima@controller/neutron

[DEFAULT]
# ...
core_plugin = ml2
service_plugins = router
allow_overlapping_ips = true
transport_url = rabbit://openstack:mima@controller
auth_strategy = keystone
notify_nova_on_port_status_changes = true
notify_nova_on_port_data_changes = true

[keystone_authtoken]
# ...
www_authenticate_uri = http://controller:5000
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = mima

[nova]
# ...
auth_url = http://controller:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = nova
password = mima

[oslo_concurrency]
# ...
lock_path = /var/lib/neutron/tmp

Configure the Modular Layer 2 (ML2) plug-in

vim /etc/neutron/plugins/ml2/ml2_conf.ini

[ml2]
# ...
type_drivers = flat,vlan,vxlan
tenant_network_types = vxlan
mechanism_drivers = linuxbridge,l2population
extension_drivers = port_security

[ml2_type_flat]
flat_networks = provider

[ml2_type_vxlan]
# ...
vni_ranges = 1:1000

[securitygroup]
# ...
enable_ipset = true

Configure the Linux bridge agent

vim /etc/neutron/plugins/ml2/linuxbridge_agent.ini

[linux_bridge]
physical_interface_mappings = provider:ens34

[vxlan]
enable_vxlan = true
local_ip = 192.168.58.140
l2_population = true

[securitygroup]
enable_security_group = true
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver

Configure the layer-3 agent

vim /etc/neutron/l3_agent.ini

[DEFAULT]
# ...
interface_driver = linuxbridge

Configure the DHCP agent

vim /etc/neutron/dhcp_agent.ini

[DEFAULT]
# ...
interface_driver = linuxbridge
dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
enable_isolated_metadata = true

Configure the metadata agent

vim /etc/neutron/metadata_agent.ini

[DEFAULT]
# ...
nova_metadata_host = controller
metadata_proxy_shared_secret = mima


Configure the Compute service to use the Networking service

vim /etc/nova/nova.conf

[neutron]
# ...
url = http://controller:9696
auth_url = http://controller:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = mima
service_metadata_proxy = true
metadata_proxy_shared_secret = mima


Install and configure compute node

vim /etc/neutron/neutron.conf

In the [database] section, comment out any connection options because compute nodes do not directly access the database.

[DEFAULT]
# ...
transport_url = rabbit://openstack:mima@controller
auth_strategy = keystone

[keystone_authtoken]
#Comment out or remove any other options in the [keystone_authtoken] section.
www_authenticate_uri = http://controller:5000
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = mima

[oslo_concurrency]
# ...
lock_path = /var/lib/neutron/tmp


Networking Option 2: Self-service networks

Configure the Linux bridge agent

vim /etc/neutron/plugins/ml2/linuxbridge_agent.ini

[linux_bridge]
physical_interface_mappings = provider:ens34

[vxlan]
enable_vxlan = true
local_ip = 192.168.58.141
l2_population = true

[securitygroup]
# ...
enable_security_group = true
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver

Configure the Compute service to use the Networking service

vim /etc/nova/nova.conf

[neutron]
# ...
url = http://controller:9696
auth_url = http://controller:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = mima

------------------------------------------------------------------------------------------
Launch an instance

Provider network

. admin-openrc

openstack network create  --share --external \
  --provider-physical-network provider \
  --provider-network-type flat provider

openstack subnet create --network provider \
  --allocation-pool start=192.168.58.50,end=192.168.58.100 \
  --dns-nameserver 8.8.4.4 --gateway 192.168.58.2 \
  --subnet-range 192.168.58.0/24 provider
  
  
------------------------------------------------------------------------------------------
barbican

GRANT ALL PRIVILEGES ON barbican.* TO 'barbican'@'localhost' \
  IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON barbican.* TO 'barbican'@'%' \
  IDENTIFIED BY 'mima';
  
[DEFAULT]
sql_connection = mysql+pymysql://barbican:mima@controller/barbican
transport_url = rabbit://openstack:mima@controller
db_auto_create = False
[keystone_authtoken]
www_authenticate_uri = http://controller:5000
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = barbican
password = mima

------------------------------------------------------------------------------------------
heat

GRANT ALL PRIVILEGES ON heat.* TO 'heat'@'localhost'  IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON heat.* TO 'heat'@'%'  IDENTIFIED BY 'mima';

vim /etc/heat/heat.conf
[database]
connection = mysql+pymysql://heat:mima@controller/heat

[DEFAULT]
transport_url = rabbit://openstack:mima@controller
heat_metadata_server_url = http://controller:8000
heat_waitcondition_server_url = http://controller:8000/v1/waitcondition
stack_domain_admin = heat_domain_admin
stack_domain_admin_password = mima
stack_user_domain_name = heat

[keystone_authtoken]
www_authenticate_uri = http://controller:5000
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = heat
password = mima

[trustee]
auth_type = password
auth_url = http://controller:5000
username = heat
password = mima
user_domain_name = default

[clients_keystone]
auth_uri = http://controller:5000

------------------------------------------------------------------------------------------
mistral

vim /etc/mistral/mistral.conf

[keystone_authtoken]
www_authenticate_uri = http://controller:5000/v3
identity_uri = http://controller:5000
auth_version = v3
admin_user = admin
admin_password = mima
admin_tenant_name = admin
memcached_servers = controller:11211

[pecan]
auth_enable = False

[DEFAULT]
transport_url = rabbit://openstack:mima@controller:5672/

[database]
connection=mysql+pymysql://mistral:mima@controller:3306/mistral

[oslo_policy]
policy_file = /etc/mistral/policy.json 

[action_heartbeat]
max_missed_heartbeats = 15
check_interval = 20
first_heartbeat_timeout = 3600


GRANT ALL PRIVILEGES ON mistral.* TO 'mistral'@'localhost' IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON mistral.* TO 'mistral'@'%' IDENTIFIED BY 'mima';


------------------------------------------------------------------------------------------
tacker

GRANT ALL PRIVILEGES ON tacker.* TO 'tacker'@'localhost' \
    IDENTIFIED BY 'mima';

GRANT ALL PRIVILEGES ON tacker.* TO 'tacker'@'%' \
    IDENTIFIED BY 'mima';
	

openstack user create --domain default --password mima tacker


vim etc/tacker/tacker.conf

[DEFAULT]
auth_strategy = keystone
policy_file = /usr/local/etc/tacker/policy.json
debug = True
use_syslog = False
bind_host = 192.168.58.140
bind_port = 9890
service_plugins = nfvo,vnfm
state_path = /var/lib/tacker

[nfvo_vim]
vim_drivers = openstack

[keystone_authtoken]
memcached_servers = 11211
region_name = RegionOne
auth_type = password
project_domain_name = Default
user_domain_name = Default
username = tacker
project_name = service
password = mima
auth_url = http://controller:5000
www_authenticate_uri = http://controller:5000


新增
[agent]
root_helper = sudo /usr/local/bin/tacker-rootwrap /usr/local/etc/tacker/rootwrap.conf

[database]
connection = mysql+pymysql://tacker:mima@controller:3306/tacker?charset=utf8

[tacker]
monitor_driver = ping,http_ping

----------------------------------------------------
ceilometer

GRANT ALL PRIVILEGES ON gnocchi.* TO 'gnocchi'@'localhost' \
  IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON gnocchi.* TO 'gnocchi'@'%' \
  IDENTIFIED BY 'mima';
  
vim /etc/gnocchi/gnocchi.conf

[api]
auth_mode = keystone

[keystone_authtoken]
auth_type = password
auth_url = http://controller:5000/v3
project_domain_name = Default
user_domain_name = Default
project_name = service
username = gnocchi
password = mima
interface = internalURL
region_name = RegionOne

[indexer]
url = mysql+pymysql://gnocchi:mima@controller/gnocchi

[storage]
# coordination_url is not required but specifying one will improve
# performance with better workload division across workers.
coordination_url = redis://controller:6379
file_basepath = /var/lib/gnocchi
driver = file


vim /etc/ceilometer/ceilometer.conf

[DEFAULT]
transport_url = rabbit://openstack:mima@controller

[service_credentials]
auth_type = password
auth_url = http://controller:5000/v3
project_domain_id = default
user_domain_id = default
project_name = service
username = ceilometer
password = mima
interface = internalURL
region_name = RegionOne

----------------------------------------------------
aodh

GRANT ALL PRIVILEGES ON aodh.* TO 'aodh'@'localhost' \
  IDENTIFIED BY 'mima';
GRANT ALL PRIVILEGES ON aodh.* TO 'aodh'@'%' \
  IDENTIFIED BY 'mima';
  
vim /etc/aodh/aodh.conf

[database]
connection = mysql+pymysql://aodh:mima@controller/aodh

[DEFAULT]
transport_url = rabbit://openstack:mima@controller
auth_strategy = keystone

[keystone_authtoken]
www_authenticate_uri = http://controller:5000
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_id = default
user_domain_id = default
project_name = service
username = aodh
password = mima

[service_credentials]
auth_type = password
auth_url = http://controller:5000/v3
project_domain_id = default
user_domain_id = default
project_name = service
username = aodh
password = mima
interface = internalURL
region_name = RegionOne