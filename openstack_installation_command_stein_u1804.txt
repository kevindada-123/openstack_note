/////////////////////////////////////////////////
#stein不能用
#interfaces(5) file used by ifup(8) and ifdown(8)
auto lo
iface lo inet loopback
#The managment network interface
auto ens34
iface ens34 inet dhcp
#The public network interface
auto ens33
iface ens33 inet manual
up ip link set dev $IFACE up
down ip link set dev $IFACE down
///////////////////////////////////


page 26
apt install software-properties-common -y
add-apt-repository cloud-archive:stein
apt-get update && apt-get dist-upgrade
reboot
apt install python-openstackclient

#SQL database for Ubuntu
[mysqld]
bind-address = 192.168.58.130
default-storage-engine = innodb
innodb_file_per_table = on
max_connections = 4096
collation-server = utf8_general_ci
character-set-server = utf8

#Message queue for Ubuntu
apt install rabbitmq-server
rabbitmqctl add_user openstack frank1995
rabbitmqctl set_permissions openstack ".*" ".*" ".*"

#Memcached for Ubuntu
apt install memcached python-memcache
gedit /etc/memcached.conf
-l 192.168.58.130
service memcached restart

#Etcd for Ubuntu
apt install etcd
gedit /etc/default/etcd 
ETCD_NAME="controller"
ETCD_DATA_DIR="/var/lib/etcd"
ETCD_INITIAL_CLUSTER_STATE="new"
ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster-01"
ETCD_INITIAL_CLUSTER="controller=http://192.168.58.130:2380"
ETCD_INITIAL_ADVERTISE_PEER_URLS="http://192.168.58.130:2380"
ETCD_ADVERTISE_CLIENT_URLS="http://192.168.58.130:2379"
ETCD_LISTEN_PEER_URLS="http://0.0.0.0:2380"
ETCD_LISTEN_CLIENT_URLS="http://192.168.58.130:2379"
///////////////////////////////////////////////////////////////////////////////
#Keystone Installation Tutorial

	#Install and configure
		#Prerequisites

> CREATE DATABASE keystone;
> GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' \

> GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' \
IDENTIFIED BY 'frank1995';
> GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' \
IDENTIFIED BY 'frank1995';

		#Install and configure components
apt install keystone
gedit /etc/keystone/keystone.conf
[database]
connection = mysql+pymysql://keystone:frank1995@controller/keystone

[token]
# ...
provider = fernet

su -s /bin/sh -c "keystone-manage db_sync" keystone

keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

keystone-manage bootstrap --bootstrap-password frank1995 \
  --bootstrap-admin-url http://controller:5000/v3/ \
  --bootstrap-internal-url http://controller:5000/v3/ \
  --bootstrap-public-url http://controller:5000/v3/ \
  --bootstrap-region-id RegionOne

	#Configure the Apache HTTP server
gedit /etc/apache2/apache2.conf
ServerName controller
	#Finalize the installation
service apache2 restart

export OS_USERNAME=admin
export OS_PASSWORD=frank1995
export OS_PROJECT_NAME=admin
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_DOMAIN_NAME=Default
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3

	#Verify operation
unset OS_AUTH_URL OS_PASSWORD

openstack --os-auth-url http://controller:5000/v3 \
  --os-project-domain-name Default --os-user-domain-name Default \
  --os-project-name admin --os-username admin token issue

openstack --os-auth-url http://controller:5000/v3 \
  --os-project-domain-name Default --os-user-domain-name Default \
  --os-project-name myproject --os-username myuser token issue

	#Create OpenStack client environment scripts
vim admin-openrc
export OS_PROJECT_DOMAIN_NAME=Default
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=frank1995
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2


vim demo-openrc
export OS_PROJECT_DOMAIN_NAME=Default
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_NAME=myproject
export OS_USERNAME=myuser
export OS_PASSWORD=frank1995
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2

///////////////////////////////////////////////////////////////////////////////
#Glance Installation
	#Install and configure (Ubuntu)
		#Prerequisites
mysql
CREATE DATABASE glance;
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' \
  IDENTIFIED BY 'frank1995';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' \
  IDENTIFIED BY 'frank1995';
exit;
			#2.Source the admin credentials to gain access to admin-only CLI commands:
. admin-openrc
openstack user create --domain default --password-prompt glance

openstack role add --project service --user glance admin

openstack service create --name glance \
  --description "OpenStack Image" image
  
openstack endpoint create --region RegionOne \
  image public http://controller:9292

openstack endpoint create --region RegionOne \
  image internal http://controller:9292

openstack endpoint create --region RegionOne \
  image admin http://controller:9292

		#Install and configure components
apt install glance

gedit /etc/glance/glance-api.conf

[database]
connection = mysql+pymysql://glance:frank1995@controller/glance

[keystone_authtoken]
# ...
www_authenticate_uri = http://controller:5000
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = glance
password = frank1995

[paste_deploy]
# ...
flavor = keystone

[glance_store]
stores = file,http
default_store = file
filesystem_store_datadir = /var/lib/glance/images/


gedit /etc/glance/glance-registry.conf

[database]
# ...
connection = mysql+pymysql://glance:frank1995@controller/glance

[keystone_authtoken]
# ...
www_authenticate_uri = http://controller:5000
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = glance
password = frank1995

[paste_deploy]
# ...
flavor = keystone

	#verify operation
. admin-openrc

wget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img

openstack image create "cirros" \
  --file cirros-0.4.0-x86_64-disk.img \
  --disk-format qcow2 --container-format bare \
  --public

openstack image list
///////////////////////////////////////////////////////////////////////////////
#Install and configure Placement for Ubuntu
	#Prerequisites
		#Create Database
mysql

CREATE DATABASE placement;

GRANT ALL PRIVILEGES ON placement.* TO 'placement'@'localhost' \
  IDENTIFIED BY 'frank1995';
GRANT ALL PRIVILEGES ON placement.* TO 'placement'@'%' \
  IDENTIFIED BY 'frank1995';
		#Configure User and Endpoints
. admin-openrc

openstack user create --domain default --password-prompt placement

openstack role add --project service --user placement admin

openstack service create --name placement \
  --description "Placement API" placement

openstack endpoint create --region RegionOne \
  placement public http://controller:8778

	#Install and configure components
	
apt install placement-api

gedit /etc/placement/placement.conf

[placement_database]
# ...
connection = mysql+pymysql://placement:frank1995@controller/placement

[api]
# ...
auth_strategy = keystone

[keystone_authtoken]
# ...
auth_url = http://controller:5000/v3
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = placement
password = frank1995


su -s /bin/sh -c "placement-manage db sync" placement

service apache2 restart

	#Verify Installation
. admin-openrc

placement-status upgrade check

pip install osc-placement

openstack --os-placement-api-version 1.2 resource class list --sort-column name
#跑不出來 20191002 11:32
openstack --os-placement-api-version 1.6 trait list --sort-column name
#跑不出來 20191002 11:32
///////////////////////////////////////////////////////////////////////////////
#Compute service
	#Install and configure controller node
		#Prerequisites
mysql

CREATE DATABASE nova_api;
CREATE DATABASE nova;
CREATE DATABASE nova_cell0;
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'frank1995';
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' \
  IDENTIFIED BY 'frank1995';

GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'frank1995';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' \
  IDENTIFIED BY 'frank1995';

GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'frank1995';
GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'%' \
  IDENTIFIED BY 'frank1995';

exit;
		#2.Source the admin credentials to gain access to admin-only CLI commands:
. admin-openrc

openstack user create --domain default --password-prompt nova
#enter password
openstack role add --project service --user nova admin

openstack service create --name nova \
  --description "OpenStack Compute" compute

openstack endpoint create --region RegionOne \
  compute public http://controller:8774/v2.1
openstack endpoint create --region RegionOne \
  compute internal http://controller:8774/v2.1
openstack endpoint create --region RegionOne \
  compute admin http://controller:8774/v2.1
	#Install and configure components
apt install nova-api nova-conductor nova-consoleauth \
  nova-novncproxy nova-scheduler
  
gedit /etc/nova/nova.conf

[api_database]
# ...
connection = mysql+pymysql://nova:frank1995@controller/nova_api

[database]
# ...
connection = mysql+pymysql://nova:frank1995@controller/nova

[DEFAULT]
# ...
transport_url = rabbit://openstack:frank1995@controller

[api]
# ...
auth_strategy = keystone

[keystone_authtoken]
# ...
auth_url = http://controller:5000/v3
memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = nova
password = NOVA_PASS

[DEFAULT]
# ...
my_ip = 192.168.58.130

[DEFAULT]
# ...
use_neutron = true
firewall_driver = nova.virt.firewall.NoopFirewallDriver

[vnc]
enabled = true
# ...
server_listen = $my_ip
server_proxyclient_address = $my_ip

[glance]
# ...
api_servers = http://controller:9292

[oslo_concurrency]
# ...
lock_path = /var/lib/nova/tmp

###Due to a packaging bug, remove the log_dir option from the [DEFAULT] section.

[placement]
# ...
region_name = RegionOne
project_domain_name = Default
project_name = service
auth_type = password
user_domain_name = Default
auth_url = http://controller:5000/v3
username = placement
password = frank1995

[neutron]
# ...
url = http://controller:9696
auth_url = http://controller:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = frank1995
service_metadata_proxy = true
metadata_proxy_shared_secret = METADATA_SECRET

#Comment out or remove any other options in the [placement] section.
			#3.Populate the nova-api database:
su -s /bin/sh -c "nova-manage api_db sync" nova
			#4.Register the cell0 database:
su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova
			#5.Create the cell1 cell:
su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova
			#6.Populate the nova database:
su -s /bin/sh -c "nova-manage db sync" nova
			#7.Verify nova cell0 and cell1 are registered correctly:
su -s /bin/sh -c "nova-manage cell_v2 list_cells" nova

		#Finalize installation
service nova-api restart
service nova-consoleauth restart
service nova-scheduler restart
service nova-conductor restart
service nova-novncproxy restart

	#Install and configure a compute node for Ubuntu
		#Install and configure components
apt install nova-compute

gedit /etc/nova/nova.conf

[DEFAULT]
# ...
transport_url = rabbit://openstack:frank1995@controller

[api]
# ...
auth_strategy = keystone

[keystone_authtoken]
# ...
auth_url = http://controller:5000/v3
memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = nova
password = frank1995

##Comment out or remove any other options in the [keystone_authtoken] section.

[DEFAULT]
# ...
my_ip = MANAGEMENT_INTERFACE_IP_ADDRESS
##Replace MANAGEMENT_INTERFACE_IP_ADDRESS with the IP address of the management network interface on your compute node, typically 10.0.0.31 for the first node in the example architecture.

[DEFAULT]
# ...
use_neutron = true
firewall_driver = nova.virt.firewall.NoopFirewallDriver

[vnc]
# ...
enabled = true
server_listen = 0.0.0.0
server_proxyclient_address = $my_ip
novncproxy_base_url = http://controller:6080/vnc_auto.html

[glance]
# ...
api_servers = http://controller:9292

[oslo_concurrency]
# ...
lock_path = /var/lib/nova/tmp

[placement]
# ...
region_name = RegionOne
project_domain_name = Default
project_name = service
auth_type = password
user_domain_name = Default
auth_url = http://controller:5000/v3
username = placement
password = frank1995
##Replace PLACEMENT_PASS with the password you choose for the placement user in the Identity service. Comment out any other options in the [placement] section.

		#Finalize installation
egrep -c '(vmx|svm)' /proc/cpuinfo

gedit /etc/nova/nova-compute.conf
[libvirt]
# ...
virt_type = qemu

service nova-compute restart

	#Verify operation
. admin-openrc
openstack compute service list
openstack catalog list
openstack image list
nova-status upgrade check
///////////////////////////////////////////////////////////////////////////////
#Networking service install
	#Install and configure controller node
		#Prerequisites
mysql -u root -p
CREATE DATABASE neutron;
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' \
  IDENTIFIED BY 'frank1995';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' \
  IDENTIFIED BY 'NEUTRON_DBPASS';
exit;

. admin-openrc
openstack user create --domain default --password-prompt neutron

openstack role add --project service --user neutron admin

openstack service create --name neutron \
  --description "OpenStack Networking" network

openstack endpoint create --region RegionOne \
  network public http://controller:9696

openstack endpoint create --region RegionOne \
  network internal http://controller:9696
  
openstack endpoint create --region RegionOne \
  network admin http://controller:9696
  
	#Networking Option 2: Self-service networks
		#Install the components
apt install neutron-server neutron-plugin-ml2 \
  neutron-linuxbridge-agent neutron-l3-agent neutron-dhcp-agent \
  neutron-metadata-agent
		#Configure the server component
gedit /etc/neutron/neutron.conf

[database]
# ...
connection = mysql+pymysql://neutron:frank1995@controller/neutron
#Comment out or remove any other connection options in the [database] section.

[DEFAULT]
# ...
core_plugin = ml2
service_plugins = router
allow_overlapping_ips = true

[DEFAULT]
# ...
transport_url = rabbit://openstack:frank1995@controller

[DEFAULT]
# ...
auth_strategy = keystone

[keystone_authtoken]
# ...
www_authenticate_uri = http://controller:5000
auth_url = http://controller:5000
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = frank1995
##Comment out or remove any other options in the [keystone_authtoken] section

[DEFAULT]
# ...
notify_nova_on_port_status_changes = true
notify_nova_on_port_data_changes = true

[nova]
# ...
auth_url = http://controller:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = nova
password = frank1995

[oslo_concurrency]
# ...
lock_path = /var/lib/neutron/tmp

	#Configure the Modular Layer 2 (ML2) plug-in
gedit /etc/neutron/plugins/ml2/ml2_conf.ini

[ml2]
# ...
type_drivers = flat,vlan,vxlan

[ml2]
# ...
tenant_network_types = vxlan

[ml2]
# ...
mechanism_drivers = linuxbridge,l2population
##After you configure the ML2 plug-in, removing values in the type_drivers option can lead to database inconsistency.

[ml2]
# ...
extension_drivers = port_security

[ml2_type_flat]
# ...
flat_networks = provider

[ml2_type_vxlan]
# ...
vni_ranges = 1:1000

[securitygroup]
# ...
enable_ipset = true

		#Configure the Linux bridge agent
gedit /etc/neutron/plugins/ml2/linuxbridge_agent.ini

[linux_bridge]
physical_interface_mappings = provider:ens34

[vxlan]
enable_vxlan = true
local_ip = 192.168.58.130
l2_population = true

[securitygroup]
# ...
enable_security_group = true
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver

net.bridge.bridge-nf-call-iptables
net.bridge.bridge-nf-call-ip6tables

		#Configure the layer-3 agent
gedit /etc/neutron/l3_agent.ini

[DEFAULT]
# ...
interface_driver = linuxbridge

		#Configure the DHCP agent
gedit /etc/neutron/dhcp_agent.ini

[DEFAULT]
# ...
interface_driver = linuxbridge
dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
enable_isolated_metadata = true

		#Configure the metadata agent
gedit /etc/neutron/metadata_agent.ini
[DEFAULT]
# ...
nova_metadata_host = controller
metadata_proxy_shared_secret = METADATA_SECRET